version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}

services:
  php-fpm:
    build:
      context: ./php-fpm
    volumes:
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./logs/php-fpm/:/var/log/php-fpm
      - ${APP_CODE_PATH_HOST}/:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9000"
    networks:
      - backend
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./logs/nginx/:/var/log/nginx
      - ./nginx/sites/:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    depends_on:
      - php-fpm
    links:
      - php-fpm
    networks:
      - frontend
      - backend
  mysql:
    build:
      context: ./mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - ./logs/mysql/:/var/log/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
  adminer:
    build:
      context: ./adminer
    ports:
      - "${ADM_PORT}:8080"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
